<?php

namespace app\modules\icase\models;

use Yii;
use app\modules\directory\models\InsDirectoryProductKind;
use app\modules\directory\models\InsDirectoryProductType;
use app\modules\directory\models\InsDirectoryProductStatus;
use app\modules\directory\models\InsDirectoryPrefix;

/**
 * This is the model class for table "ins_products".
 *
 * @property int $id
 * @property string $name_uz
 * @property string $name_ru
 * @property string $un_code
 * @property int $id_product_type
 * @property int $id_product_kind
 * @property int $id_product_prefix
 * @property int $who_create
 * @property string $date_create
 * @property string $description
 * @property int $who_approve
 * @property string $date_approve
 * @property int $id_product_status 1-active
 *
 * @property InsDirectoryProductKind $productKind
 * @property InsDirectoryPrefix $productPrefix
 * @property InsDirectoryProductStatus $productStatus
 * @property InsDirectoryProductType $productType
 * @property InsProductsCalculation[] $insProductsCalculations
 * @property InsProductsClassification[] $insProductsClassifications
 */
class InsProducts extends \yii\db\ActiveRecord
{
    /**
     * {@inheritdoc}
     */
    public static function tableName()
    {
        return 'ins_products';
    }

    /**
     * {@inheritdoc}
     */
    public function rules()
    {
        return [
            [['name_uz', 'name_ru','un_code','id_product_type', 'id_product_kind','id_product_prefix', 'who_create'], 'required'],
            [['id_product_type', 'id_product_kind', 'who_create', 'who_approve', 'id_product_status'], 'default', 'value' => null],
            [['id_product_type', 'id_product_kind', 'who_create', 'who_approve', 'id_product_status'], 'integer'],
            [['date_create', 'date_approve'], 'safe'],
            [['name_uz', 'name_ru','un_code'],'unique'],
            [['name_uz', 'name_ru','un_code'], 'string', 'max' => 50],
            [['id_product_kind'], 'exist', 'skipOnError' => true, 'targetClass' => InsDirectoryProductKind::className(), 'targetAttribute' => ['id_product_kind' => 'id']],
            [['id_product_status'], 'exist', 'skipOnError' => true, 'targetClass' => InsDirectoryProductStatus::className(), 'targetAttribute' => ['id_product_status' => 'id']],
            [['id_product_type'], 'exist', 'skipOnError' => true, 'targetClass' => InsDirectoryProductType::className(), 'targetAttribute' => ['id_product_type' => 'id']],
        ];
    }
    public function beforeSave($insert)
    {

        $this->id_product_status = 1;
        return parent::beforeSave($insert); // TODO: Change the autogenerated stub
    }

    public function beforeValidate()
    {
        $this->who_create = \Yii::$app->user->identity->id;
        return parent::beforeValidate(); // TODO: Change the autogenerated stub
    }

    /**
     * {@inheritdoc}
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'name_uz' => Yii::t('messages', 'Name Uz'),
            'name_ru' => Yii::t('messages', 'Name Ru'),
            'id_product_type' => Yii::t('messages', 'Type of Product'),
            'id_product_kind' => Yii::t('messages', 'Kind of Product'),
            'id_product_prefix' => Yii::t('messages', 'Prefix of Product'),
            'who_create' => Yii::t('messages', 'Who Create'),
            'date_create' => Yii::t('messages', 'Create Date'),
            'who_approve' => Yii::t('messages', 'Who Approve'),
            'date_approve' => Yii::t('messages', 'Approve Date'),
            'id_product_status' => Yii::t('messages', 'Status'),
            'description' => Yii::t('messages', 'Description of Product'),
            'un_code' => Yii::t('messages', 'Unique Code'),
        ];
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getProductKind()
    {
        return $this->hasOne(InsDirectoryProductKind::className(), ['id' => 'id_product_kind']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getProductStatus()
    {
        return $this->hasOne(InsDirectoryProductStatus::className(), ['id' => 'id_product_status']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getProductPrefix()
    {
        return $this->hasOne(InsDirectoryPrefix::className(), ['id' => 'id_product_prefix']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getProductType()
    {
        return $this->hasOne(InsDirectoryProductType::className(), ['id' => 'id_product_type']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getInsProductsCalculations()
    {
        return $this->hasMany(InsProductsCalculation::className(), ['id_products' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getInsProductsClassifications()
    {
        return $this->hasMany(InsProductsClassification::className(), ['id_products' => 'id']);
    }


    /**
     * @param null $key
     * @return array|mixed
     */
    public static function getStatusList($key = null){
        $result = [
           1  => Yii::t('messages','Active'),
           2 => Yii::t('messages','Deleted'),
           3 => Yii::t('messages','Saved'),
        ];
        if(!empty($key)){
            return $result[$key];
        }

        return $result;
    }
}
